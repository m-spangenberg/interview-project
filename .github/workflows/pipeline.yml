name: CD Build

on:
  push:
    branches:
      - stable
  pull_request:
    branches:
      - stable

jobs:

  test:

    runs-on: ubuntu-latest
    timeout-minutes: 3
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install linting dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --config .flake8 --statistics
      - name: Autoformat with black
        run: |
          black .
      - name: Install testing dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with PyTest and PyTest Cov
        run: |
          python -m pytest --cov=questionnaire

  build:

    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: ${{ success() }}
    needs: test
    
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            mspangenberg/bcxform:latest
            mspangenberg/bcxform:0.1.0

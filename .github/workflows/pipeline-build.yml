name: Build CI

# WAITS ON: Testing
# EXECUTED: On merge with main branch
# PERFORMS: Docker build and push to Docker Hub

on:
  push:
      branches:
        - "main"
  workflow_run:
    workflows: ["Test CI"]
    types:
      - completed

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The Black formats to 88 chars wide and needs E203 ignored
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --extend-ignore E203 --statistics
      - name: Autoformat with black
        run: |
          black questionnaire/
          black tests/.py
      - name: Test with pytest
        run: |
          pytest

  docker:

    # wait for linting, formatting, and testing to pass
    # before proceeding with build and push

    needs: tests
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            mspangenberg/bcxform:latest
            mspangenberg/bcxform:0.1.0
